.row.mbm
	- if can?(:manage, User)
		= link_to "Back to Users", users_path, class: "button button-okay"
	- else
		= link_to "Back to Home", root_url, class: "button button-okay"
	- if can?(:destroy, @user)
		= link_to "Remove User", @user, :method => :delete, :class => "button button-alert", data: { confirm: "Are you sure you want to delete #{@user.name}? You can also set this user's role to 'Retired'." }

.row.row--s
	.g
		.g-b
			.card.card--s
				.card-section
					%h2.card-title
						Profile:
						= @user.name
					.card-subtitle
						- if @user.created_at.nil?
							Last Updated
							= @user.updated_at.strftime("%-m/%-d/%Y")
						- else
							User since
							= @user.created_at.strftime("%-m/%-d/%Y")


.row.row--s
	.g
		.g-b.g-b--s--1of2.g-b--m--2of3
			= form_for @user, html: {novalidate: true} do |f|
				.card.card--s
					.card-section
						.g
							.g-b.g-b--m--1of2
								%h3.card-title.card-title--s Personal Information
								.field.field--text{class: (@user.errors.include? :first_name) ? 'has-error' : ''}
									= f.label :first_name, "First Name", class: "is-required"
									= f.text_field :first_name, placeholder: "Bill", required: true
									- if @user.errors.include? :first_name
										.field--text-error
											= @user.errors.full_messages_for(:first_name).first

								.field.field--text{class: (@user.errors.include? :last_name) ? 'has-error' : ''}
									= f.label :last_name, "Last Name", class: "is-required"
									= f.text_field :last_name, placeholder: "Columbia", required: true
									- if @user.errors.include? :last_name
										.field--text-error
											= @user.errors.full_messages_for(:last_name).first

								.field.field--text{class: (@user.errors.include? :email) ? 'has-error' : ''}
									= f.label :email, "E-Mail", class: "is-required"
									= f.email_field :email, placeholder: "bill@columbia.me", required: true
									- if @user.errors.include? :email
										.field--text-error
											= @user.errors.full_messages_for(:email).first

								.field.field--text{class: (@user.errors.include? :phone) ? 'has-error' : ''}
									= f.label :phone, "Phone Number"
									= f.telephone_field :phone, placeholder: "407-882-1010"
									- if @user.errors.include? :phone
										.field--text-error
											= @user.errors.full_messages_for(:phone).first

								- if can?(:manage, @user)
									.field{class: (@user.errors.include? :role) ? 'has-error' : ''}
										= f.label :role, "Role"
										= f.collection_select :role, User::ROLES, :to_s, :humanize
										- if @user.errors.include? :role
											.field--alert
												= @user.errors.full_messages_for(:role).first

									.field.js-user-flavor{class: (@user.errors.include? :flavor) ? 'has-error' : '', style: (@user.role != "Creative") ? 'display: none' : ''}
										= f.label :flavor, "Type of Creative"
										= f.collection_select :flavor, Order::TYPES, :to_s, :humanize
										- if @user.errors.include? :flavor
											.field--alert
												= @user.errors.full_messages_for(:flavor).first


							.g-b.g-b--m--1of2
								%h3.card-title.card-title--s Change Password
								.field.field--text{class: (@user.errors.include? :password) ? 'has-error' : ''}
									= f.label :password, "New Password"
									= f.password_field :password, autocomplete: "off"
									- if @user.errors.include? :password
										.field--text-error
											= @user.errors.full_messages_for(:password).first

								.field.field--text{class: (@user.errors.include? :password_confirmation) ? 'has-error' : ''}
									= f.label :password_confirmation, "New Password"
									= f.password_field :password_confirmation, autocomplete: "off"
									- if @user.errors.include? :password_confirmation
										.field--text-error
											= @user.errors.full_messages_for(:password_confirmation).first

								.field.field--text
									= f.label :send_emails, "E-Mail Subscriptions"
									= f.check_box :send_emails
									Send e-mails

						%p
							= f.submit "Update", class: "button button-okay"


		.g-b.g-b--s--1of2.g-b--m--1of3
			.card.card--s
				.card-section
					%h3.card-title.card-title--s Organizations
				.list.list--a
					- @assignments.each do |a|
						= render "assignments/listing", assignment: a

					- if can?(:manage, @user)
						.tile.create
							= form_for Assignment.new, remote: true do |a|
								= a.hidden_field :user_id, value: @user.id
								= a.select :organization_id, @otherOrgs.collect {|o| [o.name, o.id]}, include_blank: "Add Organization"
								= a.submit "Add", class: "button button-okay"